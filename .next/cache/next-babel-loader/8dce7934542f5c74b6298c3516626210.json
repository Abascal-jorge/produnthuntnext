{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Sistemas\\\\Desktop\\\\produnthuntnext\\\\pages\\\\nuevo-producto.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useContext } from 'react';\nimport FileUploader from \"react-firebase-file-uploader\";\nimport Layout from \"../components/layout/Layout\";\nimport Router, { useRouter } from \"next/router\";\nimport { Formulario, Campo, InputSubmit, Titulo, Error } from \"../components/ui/Formulario\"; //Importando el firebase para iniciar la conexion \n\nimport { FirebaseContext } from \"../firebase\"; //Utilizando el hooks validacion\n\nimport useValidacion from \"../hooks/useValidacion\";\nimport validarCrearProducto from \"../validacion/validarCrearProducto\";\nvar STATE_INICIAL = {\n  nombre: \"\",\n  empresa: \"\",\n  imagen: \"\",\n  url: \"\",\n  descripcion: \"\"\n};\n\nvar NuevoProducto = function NuevoProducto() {\n  _s();\n\n  //Error al crear cuenta\n  var _useState = useState(false),\n      error = _useState[0],\n      guardarError = _useState[1];\n\n  var _useValidacion = useValidacion(STATE_INICIAL, validarCrearProducto, crearProducto),\n      valores = _useValidacion.valores,\n      errores = _useValidacion.errores,\n      submitForm = _useValidacion.submitForm,\n      handleSubmit = _useValidacion.handleSubmit,\n      handleChange = _useValidacion.handleChange,\n      handleBlur = _useValidacion.handleBlur;\n\n  var nombre = valores.nombre,\n      empresa = valores.empresa,\n      imagen = valores.imagen,\n      url = valores.url,\n      descripcion = valores.descripcion; //HOOK  de routing para rideccionar \n\n  var router = useRouter(); //Context con las operaciones crud de firebase \n\n  var _useContext = useContext(FirebaseContext),\n      usuario = _useContext.usuario,\n      firebase = _useContext.firebase;\n\n  function crearProducto() {\n    return _crearProducto.apply(this, arguments);\n  }\n\n  function _crearProducto() {\n    _crearProducto = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var producto;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (usuario) {\n                _context.next = 2;\n                break;\n              }\n\n              return _context.abrupt(\"return\", router.push(\"/login\"));\n\n            case 2:\n              //Crear el objeto de nuevo producto\n              producto = {\n                nombre: nombre,\n                empresa: empresa,\n                url: url,\n                descripcion: descripcion,\n                votos: 0,\n                comentarios: [],\n                creado: Date.now()\n              }; //Insertarlo en la base de datos\n\n              firebase.db.collection(\"productos\").add(producto);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _crearProducto.apply(this, arguments);\n  }\n\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, __jsx(Titulo, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, \"Nuevo Producto\"), __jsx(Formulario, {\n    onSubmit: handleSubmit,\n    noValidate: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, __jsx(\"fieldset\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, __jsx(\"legend\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }\n  }, \"Informacion General\"), __jsx(Campo, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 25\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"nombre\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 29\n    }\n  }, \"Nombre\"), __jsx(\"input\", {\n    type: \"text\",\n    id: \"nombre\",\n    placeholder: \"Tu Nombre\",\n    name: \"nombre\",\n    onChange: handleChange,\n    onBlur: handleBlur,\n    value: nombre,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 29\n    }\n  })), errores.nombre && __jsx(Error, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 44\n    }\n  }, errores.nombre), __jsx(Campo, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 25\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"empresa\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 29\n    }\n  }, \"Empresa: \"), __jsx(\"input\", {\n    type: \"text\",\n    id: \"empresa\",\n    placeholder: \"Empresa\",\n    name: \"empresa\",\n    onChange: handleChange,\n    onBlur: handleBlur,\n    value: empresa,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 29\n    }\n  })), errores.empresa && __jsx(Error, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 45\n    }\n  }, errores.empresa), __jsx(Campo, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 25\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"imagen\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 29\n    }\n  }, \"Imagen\"), __jsx(FileUploader, {\n    accept: \"image/*\",\n    id: \"imagen\",\n    name: \"imagen\",\n    onChange: handleChange,\n    onBlur: handleBlur,\n    value: imagen,\n    randomizeFilename: true,\n    storageRef: firebase.storage.ref(\"productos\"),\n    onUploadStart: handleUploadStart,\n    onUploadError: handleUploadError,\n    onUploadSuccess: handleUploadSuccess,\n    onProgress: handleProgress,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 29\n    }\n  })), errores.imagen && __jsx(Error, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 44\n    }\n  }, errores.imagen), __jsx(Campo, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 25\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"url\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 29\n    }\n  }, \"URL\"), __jsx(\"input\", {\n    type: \"url\",\n    id: \"url\",\n    name: \"url\",\n    onChange: handleChange,\n    onBlur: handleBlur,\n    value: url,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 29\n    }\n  })), errores.url && __jsx(Error, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 41\n    }\n  }, errores.url)), __jsx(\"fieldset\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 17\n    }\n  }, __jsx(\"legend\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 21\n    }\n  }, \"Sobre tu producto\"), __jsx(Campo, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 21\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"descripcion\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 29\n    }\n  }, \"Descripcion\"), __jsx(\"textarea\", {\n    id: \"descripcion\",\n    name: \"descripcion\",\n    onChange: handleChange,\n    onBlur: handleBlur,\n    value: descripcion,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 29\n    }\n  })), errores.descripcion && __jsx(Error, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 45\n    }\n  }, errores.descripcion)), error && __jsx(Error, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 27\n    }\n  }, error), __jsx(InputSubmit, {\n    type: \"submit\",\n    value: \"Crear Producto\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 17\n    }\n  })));\n};\n\n_s(NuevoProducto, \"/AYPcn1u8Rhb5QJML5tYtmLVsTo=\", false, function () {\n  return [useValidacion, useRouter];\n});\n\n_c = NuevoProducto;\nexport default NuevoProducto;\n\nvar _c;\n\n$RefreshReg$(_c, \"NuevoProducto\");","map":{"version":3,"sources":["C:/Users/Sistemas/Desktop/produnthuntnext/pages/nuevo-producto.js"],"names":["React","useState","useContext","FileUploader","Layout","Router","useRouter","Formulario","Campo","InputSubmit","Titulo","Error","FirebaseContext","useValidacion","validarCrearProducto","STATE_INICIAL","nombre","empresa","imagen","url","descripcion","NuevoProducto","error","guardarError","crearProducto","valores","errores","submitForm","handleSubmit","handleChange","handleBlur","router","usuario","firebase","push","producto","votos","comentarios","creado","Date","now","db","collection","add","storage","ref","handleUploadStart","handleUploadError","handleUploadSuccess","handleProgress"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\r\nimport FileUploader from \"react-firebase-file-uploader\"\r\nimport Layout from \"../components/layout/Layout\";\r\nimport Router, { useRouter } from \"next/router\";\r\nimport { Formulario, Campo, InputSubmit, Titulo, Error} from \"../components/ui/Formulario\";\r\n\r\n//Importando el firebase para iniciar la conexion \r\nimport { FirebaseContext } from \"../firebase\";\r\n\r\n//Utilizando el hooks validacion\r\nimport useValidacion from \"../hooks/useValidacion\";\r\nimport validarCrearProducto from \"../validacion/validarCrearProducto\";\r\n\r\nconst STATE_INICIAL = {\r\n    nombre: \"\",\r\n    empresa: \"\",\r\n    imagen: \"\",\r\n    url: \"\",\r\n    descripcion: \"\"\r\n}\r\n\r\nconst NuevoProducto = () => {\r\n\r\n    //Error al crear cuenta\r\n    const [error, guardarError] = useState(false);\r\n\r\n    const { valores, errores, submitForm, handleSubmit, handleChange, handleBlur } = useValidacion(STATE_INICIAL, validarCrearProducto, crearProducto);\r\n\r\n    const {nombre, empresa, imagen, url, descripcion} = valores;\r\n\r\n    //HOOK  de routing para rideccionar \r\n    const router = useRouter();\r\n\r\n    //Context con las operaciones crud de firebase \r\n    const { usuario, firebase } = useContext(FirebaseContext);\r\n    \r\n    async function crearProducto(){\r\n        //Si el usuario no esta autenticado llevar al login\r\n        if(!usuario){\r\n            return router.push(\"/login\");\r\n        }\r\n\r\n        //Crear el objeto de nuevo producto\r\n        const producto = {\r\n            nombre,\r\n            empresa,\r\n            url,\r\n            descripcion,\r\n            votos: 0,\r\n            comentarios: [],\r\n            creado: Date.now()\r\n        }\r\n        //Insertarlo en la base de datos\r\n        firebase.db.collection(\"productos\").add(producto);\r\n    }\r\n\r\n    return ( \r\n        <Layout>\r\n            <Titulo>Nuevo Producto</Titulo>\r\n            <Formulario\r\n                onSubmit = {handleSubmit}\r\n                noValidate\r\n            >\r\n                <fieldset>\r\n                    <legend>Informacion General</legend>\r\n                        <Campo>\r\n                            <label htmlFor=\"nombre\">Nombre</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                id=\"nombre\"\r\n                                placeholder=\"Tu Nombre\"\r\n                                name=\"nombre\"\r\n                                onChange={handleChange}\r\n                                onBlur = {handleBlur}\r\n                                value={nombre}\r\n                            />\r\n                        </Campo>\r\n                        {errores.nombre && <Error>{errores.nombre}</Error>}\r\n                        <Campo>\r\n                            <label htmlFor=\"empresa\">Empresa: </label>\r\n                            <input\r\n                                type=\"text\"\r\n                                id=\"empresa\"\r\n                                placeholder=\"Empresa\"\r\n                                name=\"empresa\"\r\n                                onChange={handleChange}\r\n                                onBlur = {handleBlur}\r\n                                value={empresa}\r\n                            />\r\n                        </Campo>\r\n                        {errores.empresa && <Error>{errores.empresa}</Error>}\r\n                        <Campo>\r\n                            <label htmlFor=\"imagen\">Imagen</label>\r\n                            <FileUploader\r\n                                accept=\"image/*\"\r\n                                id=\"imagen\"\r\n                                name=\"imagen\"\r\n                                onChange={handleChange}\r\n                                onBlur = {handleBlur}\r\n                                value={imagen}\r\n                                randomizeFilename\r\n                                storageRef={firebase.storage.ref(\"productos\")}\r\n                                onUploadStart={handleUploadStart}\r\n                                onUploadError={handleUploadError}\r\n                                onUploadSuccess={handleUploadSuccess}\r\n                                onProgress={handleProgress}\r\n                            />\r\n                        </Campo>\r\n                        {errores.imagen && <Error>{errores.imagen}</Error>}\r\n                        <Campo>\r\n                            <label htmlFor=\"url\">URL</label>\r\n                            <input\r\n                                type=\"url\"\r\n                                id=\"url\"\r\n                                name=\"url\"\r\n                                onChange={handleChange}\r\n                                onBlur = {handleBlur}\r\n                                value={url}\r\n                            />\r\n                        </Campo>\r\n                        {errores.url && <Error>{errores.url}</Error>}\r\n                </fieldset>\r\n                \r\n                <fieldset>\r\n                    <legend>Sobre tu producto</legend>\r\n                    <Campo>\r\n                            <label htmlFor=\"descripcion\">Descripcion</label>\r\n                            <textarea\r\n                                id=\"descripcion\"\r\n                                name=\"descripcion\"\r\n                                onChange={handleChange}\r\n                                onBlur = {handleBlur}\r\n                                value={descripcion}\r\n                            />\r\n                    </Campo>\r\n                    {errores.descripcion && <Error>{errores.descripcion}</Error>}\r\n                </fieldset>\r\n\r\n                {error && <Error>{error}</Error>}\r\n                <InputSubmit\r\n                    type=\"submit\"\r\n                    value=\"Crear Producto\"\r\n                />\r\n            </Formulario>\r\n        </Layout>\r\n     );\r\n}\r\nexport default NuevoProducto;"]},"metadata":{},"sourceType":"module"}