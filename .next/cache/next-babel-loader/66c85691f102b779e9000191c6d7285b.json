{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sistemas\\\\Desktop\\\\produnthuntnext\\\\pages\\\\nuevo-producto.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useContext } from 'react';\nimport FileUploader from \"react-firebase-file-uploader\";\nimport Layout from \"../components/layout/Layout\";\nimport Router, { useRouter } from \"next/router\";\nimport { Formulario, Campo, InputSubmit, Titulo, Error } from \"../components/ui/Formulario\"; //Importando el firebase para iniciar la conexion \n\nimport { FirebaseContext } from \"../firebase\"; //Utilizando el hooks validacion\n\nimport useValidacion from \"../hooks/useValidacion\";\nimport validarCrearProducto from \"../validacion/validarCrearProducto\";\nconst STATE_INICIAL = {\n  nombre: \"\",\n  empresa: \"\",\n  imagen: \"\",\n  url: \"\",\n  descripcion: \"\"\n};\n\nconst NuevoProducto = () => {\n  //Error al crear cuenta\n  const {\n    0: error,\n    1: guardarError\n  } = useState(false);\n  const {\n    valores,\n    errores,\n    submitForm,\n    handleSubmit,\n    handleChange,\n    handleBlur\n  } = useValidacion(STATE_INICIAL, validarCrearProducto, crearProducto);\n  const {\n    nombre,\n    empresa,\n    imagen,\n    url,\n    descripcion\n  } = valores; //HOOK  de routing para rideccionar \n\n  const router = useRouter(); //Context con las operaciones crud de firebase \n\n  const {\n    usuario,\n    firebase\n  } = useContext(FirebaseContext);\n\n  async function crearProducto() {\n    //Si el usuario no esta autenticado llevar al login\n    if (!usuario) {\n      return router.push(\"/login\");\n    } //Crear el objeto de nuevo producto\n\n\n    const producto = {\n      nombre,\n      empresa,\n      url,\n      descripcion,\n      votos: 0,\n      comentarios: [],\n      creado: Date.now()\n    }; //Insertarlo en la base de datos\n\n    firebase.db.collection(\"productos\").add(producto);\n  }\n\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, __jsx(Titulo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, \"Nuevo Producto\"), __jsx(Formulario, {\n    onSubmit: handleSubmit,\n    noValidate: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, __jsx(\"fieldset\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, __jsx(\"legend\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }\n  }, \"Informacion General\"), __jsx(Campo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 25\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"nombre\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 29\n    }\n  }, \"Nombre\"), __jsx(\"input\", {\n    type: \"text\",\n    id: \"nombre\",\n    placeholder: \"Tu Nombre\",\n    name: \"nombre\",\n    onChange: handleChange,\n    onBlur: handleBlur,\n    value: nombre,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 29\n    }\n  })), errores.nombre && __jsx(Error, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 44\n    }\n  }, errores.nombre), __jsx(Campo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 25\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"empresa\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 29\n    }\n  }, \"Empresa: \"), __jsx(\"input\", {\n    type: \"text\",\n    id: \"empresa\",\n    placeholder: \"Empresa\",\n    name: \"empresa\",\n    onChange: handleChange,\n    onBlur: handleBlur,\n    value: empresa,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 29\n    }\n  })), errores.empresa && __jsx(Error, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 45\n    }\n  }, errores.empresa), __jsx(Campo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 25\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"imagen\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 29\n    }\n  }, \"Imagen\"), __jsx(FileUploader, {\n    accept: \"image/*\",\n    id: \"imagen\",\n    name: \"imagen\",\n    onChange: handleChange,\n    onBlur: handleBlur,\n    value: imagen,\n    randomizeFilename: true,\n    storageRef: firebase.storage.ref(\"productos\"),\n    onUploadStart: handleUploadStart,\n    onUploadError: handleUploadError,\n    onUploadSuccess: handleUploadSuccess,\n    onProgress: handleProgress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 29\n    }\n  })), errores.imagen && __jsx(Error, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 44\n    }\n  }, errores.imagen), __jsx(Campo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 25\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"url\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 29\n    }\n  }, \"URL\"), __jsx(\"input\", {\n    type: \"url\",\n    id: \"url\",\n    name: \"url\",\n    onChange: handleChange,\n    onBlur: handleBlur,\n    value: url,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 29\n    }\n  })), errores.url && __jsx(Error, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 41\n    }\n  }, errores.url)), __jsx(\"fieldset\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 17\n    }\n  }, __jsx(\"legend\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 21\n    }\n  }, \"Sobre tu producto\"), __jsx(Campo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 21\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"descripcion\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 29\n    }\n  }, \"Descripcion\"), __jsx(\"textarea\", {\n    id: \"descripcion\",\n    name: \"descripcion\",\n    onChange: handleChange,\n    onBlur: handleBlur,\n    value: descripcion,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 29\n    }\n  })), errores.descripcion && __jsx(Error, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 45\n    }\n  }, errores.descripcion)), error && __jsx(Error, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 27\n    }\n  }, error), __jsx(InputSubmit, {\n    type: \"submit\",\n    value: \"Crear Producto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default NuevoProducto;","map":{"version":3,"sources":["C:/Users/Sistemas/Desktop/produnthuntnext/pages/nuevo-producto.js"],"names":["React","useState","useContext","FileUploader","Layout","Router","useRouter","Formulario","Campo","InputSubmit","Titulo","Error","FirebaseContext","useValidacion","validarCrearProducto","STATE_INICIAL","nombre","empresa","imagen","url","descripcion","NuevoProducto","error","guardarError","valores","errores","submitForm","handleSubmit","handleChange","handleBlur","crearProducto","router","usuario","firebase","push","producto","votos","comentarios","creado","Date","now","db","collection","add","storage","ref","handleUploadStart","handleUploadError","handleUploadSuccess","handleProgress"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\r\nimport FileUploader from \"react-firebase-file-uploader\"\r\nimport Layout from \"../components/layout/Layout\";\r\nimport Router, { useRouter } from \"next/router\";\r\nimport { Formulario, Campo, InputSubmit, Titulo, Error} from \"../components/ui/Formulario\";\r\n\r\n//Importando el firebase para iniciar la conexion \r\nimport { FirebaseContext } from \"../firebase\";\r\n\r\n//Utilizando el hooks validacion\r\nimport useValidacion from \"../hooks/useValidacion\";\r\nimport validarCrearProducto from \"../validacion/validarCrearProducto\";\r\n\r\nconst STATE_INICIAL = {\r\n    nombre: \"\",\r\n    empresa: \"\",\r\n    imagen: \"\",\r\n    url: \"\",\r\n    descripcion: \"\"\r\n}\r\n\r\nconst NuevoProducto = () => {\r\n\r\n    //Error al crear cuenta\r\n    const [error, guardarError] = useState(false);\r\n\r\n    const { valores, errores, submitForm, handleSubmit, handleChange, handleBlur } = useValidacion(STATE_INICIAL, validarCrearProducto, crearProducto);\r\n\r\n    const {nombre, empresa, imagen, url, descripcion} = valores;\r\n\r\n    //HOOK  de routing para rideccionar \r\n    const router = useRouter();\r\n\r\n    //Context con las operaciones crud de firebase \r\n    const { usuario, firebase } = useContext(FirebaseContext);\r\n    \r\n    async function crearProducto(){\r\n        //Si el usuario no esta autenticado llevar al login\r\n        if(!usuario){\r\n            return router.push(\"/login\");\r\n        }\r\n\r\n        //Crear el objeto de nuevo producto\r\n        const producto = {\r\n            nombre,\r\n            empresa,\r\n            url,\r\n            descripcion,\r\n            votos: 0,\r\n            comentarios: [],\r\n            creado: Date.now()\r\n        }\r\n        //Insertarlo en la base de datos\r\n        firebase.db.collection(\"productos\").add(producto);\r\n    }\r\n\r\n    return ( \r\n        <Layout>\r\n            <Titulo>Nuevo Producto</Titulo>\r\n            <Formulario\r\n                onSubmit = {handleSubmit}\r\n                noValidate\r\n            >\r\n                <fieldset>\r\n                    <legend>Informacion General</legend>\r\n                        <Campo>\r\n                            <label htmlFor=\"nombre\">Nombre</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                id=\"nombre\"\r\n                                placeholder=\"Tu Nombre\"\r\n                                name=\"nombre\"\r\n                                onChange={handleChange}\r\n                                onBlur = {handleBlur}\r\n                                value={nombre}\r\n                            />\r\n                        </Campo>\r\n                        {errores.nombre && <Error>{errores.nombre}</Error>}\r\n                        <Campo>\r\n                            <label htmlFor=\"empresa\">Empresa: </label>\r\n                            <input\r\n                                type=\"text\"\r\n                                id=\"empresa\"\r\n                                placeholder=\"Empresa\"\r\n                                name=\"empresa\"\r\n                                onChange={handleChange}\r\n                                onBlur = {handleBlur}\r\n                                value={empresa}\r\n                            />\r\n                        </Campo>\r\n                        {errores.empresa && <Error>{errores.empresa}</Error>}\r\n                        <Campo>\r\n                            <label htmlFor=\"imagen\">Imagen</label>\r\n                            <FileUploader\r\n                                accept=\"image/*\"\r\n                                id=\"imagen\"\r\n                                name=\"imagen\"\r\n                                onChange={handleChange}\r\n                                onBlur = {handleBlur}\r\n                                value={imagen}\r\n                                randomizeFilename\r\n                                storageRef={firebase.storage.ref(\"productos\")}\r\n                                onUploadStart={handleUploadStart}\r\n                                onUploadError={handleUploadError}\r\n                                onUploadSuccess={handleUploadSuccess}\r\n                                onProgress={handleProgress}\r\n                            />\r\n                        </Campo>\r\n                        {errores.imagen && <Error>{errores.imagen}</Error>}\r\n                        <Campo>\r\n                            <label htmlFor=\"url\">URL</label>\r\n                            <input\r\n                                type=\"url\"\r\n                                id=\"url\"\r\n                                name=\"url\"\r\n                                onChange={handleChange}\r\n                                onBlur = {handleBlur}\r\n                                value={url}\r\n                            />\r\n                        </Campo>\r\n                        {errores.url && <Error>{errores.url}</Error>}\r\n                </fieldset>\r\n                \r\n                <fieldset>\r\n                    <legend>Sobre tu producto</legend>\r\n                    <Campo>\r\n                            <label htmlFor=\"descripcion\">Descripcion</label>\r\n                            <textarea\r\n                                id=\"descripcion\"\r\n                                name=\"descripcion\"\r\n                                onChange={handleChange}\r\n                                onBlur = {handleBlur}\r\n                                value={descripcion}\r\n                            />\r\n                    </Campo>\r\n                    {errores.descripcion && <Error>{errores.descripcion}</Error>}\r\n                </fieldset>\r\n\r\n                {error && <Error>{error}</Error>}\r\n                <InputSubmit\r\n                    type=\"submit\"\r\n                    value=\"Crear Producto\"\r\n                />\r\n            </Formulario>\r\n        </Layout>\r\n     );\r\n}\r\nexport default NuevoProducto;"]},"metadata":{},"sourceType":"module"}