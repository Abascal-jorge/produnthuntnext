{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jorge\\\\Documents\\\\Programacion Web\\\\Curso udemy React js\\\\React js app\\\\produnthuntnext\\\\pages\\\\productos\\\\[id].js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useContext, useState } from 'react';\nimport { useRouter } from \"next/router\";\nimport Layout from \"../../components/layout/Layout\";\nimport Error404 from \"../../components/layout/404\";\nimport { FirebaseContext } from \"../../firebase\";\nimport styled from \"@emotion/styled\";\nimport Spinner from \"../../components/layout/Spinner\";\nimport { Campo, InputSubmit } from \"../../components/ui/Formulario\";\nimport formatDistanceToNow from \"date-fns/formatDistanceToNow\";\nimport { es } from \"date-fns/locale\";\nimport Boton from \"../../components/ui/Boton\";\nconst ContenedorProducto = styled.div`\n    @media (min-width: 768px) {\n        display: grid;\n        grid-template-columns: 2fr 1fr;\n        column-gap: 2rem;\n    }\n`;\nconst Nombre = styled.h1`\n    text-align: center;\n    margin-top: 5rem;\n`;\nconst Titulo2 = styled.h2`\n    margin: 2rem 0;\n`;\nconst CreadorProducto = styled.p`\n    padding: .5rem 2rem;\n    background-color: #DA552F;\n    color: #fff;\n    text-transform: uppercase;\n    font-weight: bold;\n    display: inline-block;\n    text-align: center;\n`;\n\nconst Producto = () => {\n  //Routing para obtener el id actual \n  const router = useRouter();\n  const {\n    query: {\n      id\n    }\n  } = router; //Crando state para cambio de producto y no ciclar la aplicacion\n\n  const {\n    0: cambio,\n    1: guardarCambio\n  } = useState(\"\"); //Creando estate para guardar el resultado de la busqueda\n\n  const {\n    0: producto,\n    1: guardarProducto\n  } = useState(\"\"); //state para el error en la consulta \n\n  const {\n    0: error,\n    1: guardarError\n  } = useState(false); //State para activar el spinner \n\n  const {\n    0: activar,\n    1: guardarActivar\n  } = useState(false); //Creando state para comentarios\n\n  const {\n    0: nuevosComentarios,\n    1: guardarComentarios\n  } = useState({\n    mensaje: \"\"\n  }); // Extrayendo firebase de firebasecontext para llamar a la funciones de firebase\n\n  const {\n    firebase,\n    usuario\n  } = useContext(FirebaseContext);\n  useEffect(() => {\n    if (id) {\n      const obtenerProducto = async () => {\n        const productoQuery = await firebase.db.collection(\"productos\").doc(id);\n        const producto = await productoQuery.get();\n\n        if (producto.exists) {\n          guardarProducto(producto.data());\n          guardarActivar(true);\n          setTimeout(() => {\n            guardarActivar(false);\n          }, 1000);\n        } else {\n          guardarError(true);\n        }\n      };\n\n      obtenerProducto();\n    }\n  }, [id, cambio]); //guardarActivar(true);\n  //if(Object.keys(producto).length === 0)return <Spinner/>;\n\n  const {\n    comentarios,\n    creado,\n    descripcion,\n    empresa,\n    nombre,\n    url,\n    urlimagen,\n    votos,\n    creador,\n    haVotado\n  } = producto;\n\n  const votarProducto = () => {\n    if (!usuario) {\n      return router.push(\"/\");\n    }\n\n    const NuevoVotos = votos + 1; //Verficar si el usuario ha votado \n\n    if (haVotado.includes(usuario.uid)) return; //Guardar el ID del usuario que ha votado\n\n    const hanvotado = [...haVotado, usuario.uid]; //Agregando a la base de datos\n\n    firebase.db.collection(\"productos\").doc(id).update({\n      votos: NuevoVotos,\n      haVotado: hanvotado\n    }); //Agregando al state\n\n    guardarProducto(_objectSpread(_objectSpread({}, producto), {}, {\n      votos: NuevoVotos\n    }));\n    guardarCambio(\"Cambio\");\n  }; //Creando funcion para llenar el state de comentarios\n\n\n  const handleComentarios = e => {\n    guardarComentarios(_objectSpread(_objectSpread({}, nuevosComentarios), {}, {\n      [e.target.name]: e.target.value\n    }));\n  }; //Funcion vewrifica si es el creador el que escribe el comeentario\n\n\n  const origenCreador = id => {\n    if (creador.id === id) {\n      return true;\n    }\n  }; //Creando funcion boton comentar en el formulario para agregar formulari\n\n\n  const onsubmitComentario = e => {\n    e.preventDefault();\n\n    if (!usuario) {\n      return router.push(\"/\");\n    } //Informacion extra al comentario \n\n\n    nuevosComentarios.usuarioId = usuario.uid;\n    nuevosComentarios.usuarioNombre = usuario.displayName; //Tomar copia de comentario y agregarlos al arreglo\n\n    const nuevosComentario = [...comentarios, nuevosComentarios]; //Actualizar la BD\n\n    firebase.db.collection(\"productos\").doc(id).update({\n      comentarios: nuevosComentario\n    }); // Actualizar el state\n\n    guardarProducto(_objectSpread(_objectSpread({}, producto), {}, {\n      comentarios: nuevosComentario\n    }));\n    guardarComentarios({\n      mensaje: \"\"\n    });\n  };\n\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }\n  }, __jsx(React.Fragment, null, error ? __jsx(Error404, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 30\n    }\n  }) : __jsx(\"div\", {\n    className: \"contenedor\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 25\n    }\n  }, activar || !producto ? __jsx(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 33\n    }\n  }) : __jsx(React.Fragment, null, __jsx(Nombre, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 37\n    }\n  }, nombre), __jsx(ContenedorProducto, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 37\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 42\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 49\n    }\n  }, \"Publicado hace: \", formatDistanceToNow(new Date(creado), {\n    locale: es\n  }), \" \"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 49\n    }\n  }, \"Por \", creador.nombre, \" de \", empresa), __jsx(\"img\", {\n    src: urlimagen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 49\n    }\n  }), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 49\n    }\n  }, descripcion), usuario && __jsx(React.Fragment, null, __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 57\n    }\n  }, \"Agrega tu comentario\"), __jsx(\"form\", {\n    onSubmit: onsubmitComentario,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 57\n    }\n  }, __jsx(Campo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 61\n    }\n  }, __jsx(\"input\", {\n    type: \"text\",\n    name: \"mensaje\",\n    onChange: handleComentarios,\n    value: nuevosComentarios.mensaje,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 65\n    }\n  })), __jsx(InputSubmit, {\n    type: \"submit\",\n    value: \"Agregar Comentario\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 61\n    }\n  }))), __jsx(Titulo2, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 49\n    }\n  }, \"Comentarios\"), comentarios.length === 0 ? \"Aun no hay comentarios\" : __jsx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 53\n    }\n  }, comentarios.map((comentario, i) => __jsx(\"li\", {\n    key: `${comentario.usuarioId}-${i}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 61\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 65\n    }\n  }, comentario.mensaje), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 65\n    }\n  }, \"Escrito por:\", __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 69\n    }\n  }, `  ${comentario.usuarioNombre}`)), origenCreador(comentario.usuarioId) && __jsx(CreadorProducto, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 69\n    }\n  }, \"Es creador\"))))), __jsx(\"aside\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 45\n    }\n  }, __jsx(Boton, {\n    target: \"_blank\",\n    bgColor: \"true\",\n    href: url,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 49\n    }\n  }, \"Visitar Url\"), __jsx(\"div\", {\n    className: \"campo-votos\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 49\n    }\n  }, __jsx(\"p\", {\n    className: \"votos\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 53\n    }\n  }, votos, \" Votos\"), usuario && __jsx(Boton, {\n    onClick: votarProducto,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 57\n    }\n  }, \"Votar\"))))))));\n};\n\nexport default Producto;","map":{"version":3,"sources":["C:/Users/jorge/Documents/Programacion Web/Curso udemy React js/React js app/produnthuntnext/pages/productos/[id].js"],"names":["React","useEffect","useContext","useState","useRouter","Layout","Error404","FirebaseContext","styled","Spinner","Campo","InputSubmit","formatDistanceToNow","es","Boton","ContenedorProducto","div","Nombre","h1","Titulo2","h2","CreadorProducto","p","Producto","router","query","id","cambio","guardarCambio","producto","guardarProducto","error","guardarError","activar","guardarActivar","nuevosComentarios","guardarComentarios","mensaje","firebase","usuario","obtenerProducto","productoQuery","db","collection","doc","get","exists","data","setTimeout","comentarios","creado","descripcion","empresa","nombre","url","urlimagen","votos","creador","haVotado","votarProducto","push","NuevoVotos","includes","uid","hanvotado","update","handleComentarios","e","target","name","value","origenCreador","onsubmitComentario","preventDefault","usuarioId","usuarioNombre","displayName","nuevosComentario","Date","locale","length","map","comentario","i"],"mappings":"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","sourcesContent":["import React, { useEffect, useContext, useState } from 'react';\r\nimport { useRouter } from \"next/router\";\r\nimport Layout from \"../../components/layout/Layout\";\r\nimport Error404 from \"../../components/layout/404\";\r\nimport { FirebaseContext } from \"../../firebase\";\r\nimport styled from \"@emotion/styled\";\r\nimport Spinner from \"../../components/layout/Spinner\";\r\nimport { Campo, InputSubmit} from \"../../components/ui/Formulario\";\r\nimport formatDistanceToNow from \"date-fns/formatDistanceToNow\";\r\nimport { es } from \"date-fns/locale\";\r\nimport Boton  from \"../../components/ui/Boton\";\r\n\r\nconst ContenedorProducto = styled.div`\r\n    @media (min-width: 768px) {\r\n        display: grid;\r\n        grid-template-columns: 2fr 1fr;\r\n        column-gap: 2rem;\r\n    }\r\n`;\r\n\r\nconst Nombre = styled.h1`\r\n    text-align: center;\r\n    margin-top: 5rem;\r\n`;\r\n\r\nconst Titulo2 = styled.h2`\r\n    margin: 2rem 0;\r\n`;\r\n\r\nconst CreadorProducto = styled.p`\r\n    padding: .5rem 2rem;\r\n    background-color: #DA552F;\r\n    color: #fff;\r\n    text-transform: uppercase;\r\n    font-weight: bold;\r\n    display: inline-block;\r\n    text-align: center;\r\n`;\r\n\r\nconst Producto = () => {\r\n\r\n    //Routing para obtener el id actual \r\n    const router = useRouter();\r\n    const { query: { id } } = router;\r\n\r\n    //Crando state para cambio de producto y no ciclar la aplicacion\r\n    const[cambio, guardarCambio] = useState(\"\");\r\n    //Creando estate para guardar el resultado de la busqueda\r\n    const [producto, guardarProducto] = useState(\"\");\r\n    //state para el error en la consulta \r\n    const [error, guardarError] = useState(false);\r\n    //State para activar el spinner \r\n    const [activar, guardarActivar] = useState(false);\r\n    //Creando state para comentarios\r\n    const [nuevosComentarios, guardarComentarios] = useState({\r\n        mensaje: \"\"\r\n    });\r\n\r\n    // Extrayendo firebase de firebasecontext para llamar a la funciones de firebase\r\n    const { firebase, usuario } = useContext(FirebaseContext);\r\n\r\n    useEffect(() => {\r\n        if(id){\r\n            const obtenerProducto = async ()  => {\r\n                const productoQuery = await firebase.db.collection(\"productos\").doc(id);\r\n                const producto = await productoQuery.get();\r\n                if(producto.exists){\r\n                    guardarProducto(producto.data());\r\n                    guardarActivar(true);\r\n                    setTimeout(() => {\r\n                        guardarActivar(false);\r\n                    }, 1000);\r\n                }else{\r\n                    guardarError(true);\r\n                }\r\n            }\r\n            obtenerProducto();\r\n        }\r\n    }, [id, cambio]);\r\n\r\n    //guardarActivar(true);\r\n    //if(Object.keys(producto).length === 0)return <Spinner/>;\r\n    const {comentarios, creado, descripcion, empresa, nombre, url, urlimagen, votos, creador, haVotado} = producto;\r\n\r\n    const votarProducto = () => {\r\n        if(!usuario){\r\n            return router.push(\"/\");\r\n        }\r\n        \r\n        const NuevoVotos = votos + 1;\r\n\r\n        //Verficar si el usuario ha votado \r\n        if(haVotado.includes(usuario.uid))return;\r\n        //Guardar el ID del usuario que ha votado\r\n        const hanvotado = [...haVotado, usuario.uid];\r\n        //Agregando a la base de datos\r\n        firebase.db.collection(\"productos\").doc(id).update({votos: NuevoVotos, haVotado: hanvotado});    \r\n\r\n        //Agregando al state\r\n        guardarProducto({\r\n            ...producto,\r\n            votos: NuevoVotos\r\n        });\r\n        guardarCambio(\"Cambio\");\r\n    }\r\n\r\n    //Creando funcion para llenar el state de comentarios\r\n    const handleComentarios = (e) =>{\r\n        guardarComentarios({\r\n            ...nuevosComentarios,\r\n            [e.target.name] : e.target.value\r\n        });\r\n    }\r\n\r\n    //Funcion vewrifica si es el creador el que escribe el comeentario\r\n    const origenCreador = id => {\r\n        if(creador.id === id){\r\n            return true;\r\n        }\r\n    }\r\n\r\n    //Creando funcion boton comentar en el formulario para agregar formulari\r\n    const onsubmitComentario = (e) => {\r\n        e.preventDefault();\r\n        if(!usuario){\r\n            return router.push(\"/\");\r\n        }\r\n        //Informacion extra al comentario \r\n        nuevosComentarios.usuarioId = usuario.uid;\r\n        nuevosComentarios.usuarioNombre = usuario.displayName;\r\n        //Tomar copia de comentario y agregarlos al arreglo\r\n        const nuevosComentario = [...comentarios, nuevosComentarios];\r\n        //Actualizar la BD\r\n        firebase.db.collection(\"productos\").doc(id).update({\r\n            comentarios: nuevosComentario\r\n        })\r\n        // Actualizar el state\r\n        guardarProducto({\r\n            ...producto,\r\n            comentarios: nuevosComentario\r\n        })\r\n        guardarComentarios({\r\n            mensaje: \"\"\r\n        });\r\n    }\r\n\r\n    return ( \r\n        <Layout>\r\n            <>\r\n                    {error ? <Error404/> :\r\n                    \r\n                        <div className=\"contenedor\">\r\n                            {activar || !producto ?\r\n                                <Spinner/>\r\n                            : <>\r\n                                    <Nombre>\r\n                                    {nombre}\r\n                                    </Nombre>\r\n                                    <ContenedorProducto>\r\n                                         <div>\r\n                                                <p>Publicado hace: { formatDistanceToNow(new Date(creado), { locale: es })} </p>\r\n                                                <p>Por {creador.nombre} de {empresa}</p>\r\n                                                <img src={urlimagen}/>\r\n                                                <p>{descripcion}</p>\r\n                                                {usuario &&\r\n                                                    <>\r\n                                                        <h2>Agrega tu comentario</h2>\r\n                                                        <form\r\n                                                            onSubmit={onsubmitComentario}\r\n                                                        >\r\n                                                            <Campo>\r\n                                                                <input\r\n                                                                    type=\"text\"\r\n                                                                    name=\"mensaje\"\r\n                                                                    onChange={handleComentarios}\r\n                                                                    value={nuevosComentarios.mensaje}\r\n                                                                />\r\n                                                            </Campo>\r\n                                                            <InputSubmit\r\n                                                                type=\"submit\"\r\n                                                                value=\"Agregar Comentario\"\r\n                                                            />\r\n                                                        </form>\r\n                                                    </>    \r\n                                                }\r\n                                                <Titulo2>Comentarios</Titulo2>\r\n                                                {comentarios.length === 0 ? \"Aun no hay comentarios\" :\r\n                                                    <ul>\r\n                                                        {comentarios.map( (comentario, i) => (\r\n                                                            <li\r\n                                                                key={`${comentario.usuarioId}-${i}`}\r\n                                                            >\r\n                                                                <p>{comentario.mensaje}</p>\r\n                                                                <p>Escrito por: \r\n                                                                    <span>{`  ${comentario.usuarioNombre}`}</span>\r\n                                                                </p>\r\n                                                                {origenCreador(comentario.usuarioId) &&\r\n                                                                    <CreadorProducto>Es creador</CreadorProducto>\r\n                                                                }\r\n                                                            </li>\r\n                                                        ))}\r\n                                                    </ul>\r\n                                                }\r\n                                            </div>\r\n                                            <aside>\r\n                                                <Boton\r\n                                                    target=\"_blank\"\r\n                                                    bgColor=\"true\"\r\n                                                    href={url}\r\n                                                >\r\n                                                    Visitar Url\r\n                                                </Boton>\r\n                                                <div className=\"campo-votos\">\r\n                                                    <p className=\"votos\">{votos} Votos</p>\r\n                                                    {usuario &&\r\n                                                        <Boton\r\n                                                            onClick={votarProducto}\r\n                                                        >\r\n                                                            Votar\r\n                                                        </Boton>\r\n                                                    }\r\n                                                </div>\r\n                                            </aside>\r\n                                    </ContenedorProducto>\r\n                               </>\r\n                            }\r\n                        </div>   \r\n                    }\r\n            </>\r\n        </Layout>\r\n     );\r\n}\r\n \r\nexport default Producto;"]},"metadata":{},"sourceType":"module"}